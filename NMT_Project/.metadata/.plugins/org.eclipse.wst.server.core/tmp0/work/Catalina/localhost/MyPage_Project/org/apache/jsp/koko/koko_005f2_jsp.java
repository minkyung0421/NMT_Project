/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-09-05 01:19:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.koko;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class koko_005f2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Coco</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"koko.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<section class=\"section_menu\">\r\n");
      out.write("            <a href = \"../list.jsp\"> <button>자유게시판</button></a>\r\n");
      out.write("        <article class=\"menu\">\r\n");
      out.write("            <a href = \"../index.jsp\"><p class=\"index\">Index</p></a>\r\n");
      out.write("            <ul class=\"mylist\">\r\n");
      out.write("                <li class = \"snow_link\"><a href = \"../snow/snow_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Snow White</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"mermaid_link\">\r\n");
      out.write("                    <a href=\"../mermaid/mermaid_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>The Little Mermaid</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"christmas_link\"><a href = \"../christmas/christmas_1.jsp\" style = \"color:black\"><label>The Nightmare before Christmas</label></a></li>\r\n");
      out.write("                <li class=\"rata_link\">\r\n");
      out.write("                    <a href=\"../rata/rata_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Ratatouille</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"inside_link\">\r\n");
      out.write("                    <a href=\"../inside/inside_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Inside Out</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"moana_link\">\r\n");
      out.write("                    <a href=\"../moana/moana_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Moana</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"koko_link\"><a href = \"../koko/koko_1.jsp\" style = \"color:black\"><label>Coco</label></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <section class = \"section_content\">\r\n");
      out.write("        <article>\r\n");
      out.write("            <img src = \"../koko_img/migel.png\" width=\"12%\" height=\"22%\" align=\"left\" style = \"margin-right: 2%; margin-bottom: 3%\">\r\n");
      out.write("            <label style = \"font-size:20pt;\">미겔 리베라(MIGUEL RIVERA)</label><br><br>\r\n");
      out.write("            아직 구두제조를 배우기는 어려서 구두닦이를 하면서 집안일을 돕고 있다. \r\n");
      out.write("            리베라 집안은 음악가 고조할아버지가 음악으로 성공하기 위해 고조할머니 이멜다와 외동딸 코코를 버리고 떠난 후 이멜다와 코코가 구두제조업으로 가업을 삼아 집안을 일으켜 세웠기 때문에 \r\n");
      out.write("            음악을 즐기거나 연주하는 것은 물론 음악에 대해 언급하는 것조차 금기시 한다. 하지만 미겔은 음악에 미쳐 있고, \r\n");
      out.write("            과거의 대가수 에르네스토 델라 크루즈를 동경하며 남몰래 기타를 연습하고 음악가의 꿈을 키운다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </article>\r\n");
      out.write("        <article style = \"float: left\">\r\n");
      out.write("            <a href = \"koko_3.jsp\"><article style=\"float: right; margin-top:10%\"> <label style=\"font-weight: 800\">STORY</label><img src = \"../snow_img/nn.png\"></article></a>\r\n");
      out.write("            <img src = \"../koko_img/hector.jpg\" width=\"12%\" height=\"8%\" align=\"right\"  style = \"margin-left: 2%; margin-bottom: 3%\">\r\n");
      out.write("            <label style = \"float: right; font-size:20pt;\">헥토르(HECTOR)</label><br><br>\r\n");
      out.write("            픽사의 영화 코코의 또 다른 주인공으로 미겔 리베라과 함께 여정을 떠나게 되는 해골 음악가 아저씨.\r\n");
      out.write("            낡은 다리 밑에서 구두약으로 미겔 얼굴에 해골을 그려준 뒤[5] 이 마당은 기억이 전부라면서, \r\n");
      out.write("            제단에 사진이 올려져있지 않으면 다리를 못건너는데 본인은 사진이 없기에 미겔이 에르네스토 델라 크루즈를 만나 축복을 받아 이승에 올라가면 덤으로 본인 사진도 제단에 올려달라면서 부탁한다. \r\n");
      out.write("            \r\n");
      out.write("           \r\n");
      out.write("        </article>\r\n");
      out.write("        <article>\r\n");
      out.write("            <img src = \"../koko_img/ernesto.jpg\" width=\"20%\" height=\"30%\" align=\"left\" style = \"margin-right: 2%;\">\r\n");
      out.write("            <br><br><br><br><br>\r\n");
      out.write("            <label style = \"font-size:20pt;\">에르네스토 델라 크루즈(ERNESTO DE LA CRUZ)</label><br><br>\r\n");
      out.write("            픽사의 영화 코코의 등장인물로 멕시코의 대가수이자 영화배우. \r\n");
      out.write("            미겔 리베라가 태어나기 전에 활동하던 대스타였으나 1942년에 공연 중 어이없는 사고로 인해 요절하고 말았다. \r\n");
      out.write("            마우솔레움(가옥형 묘소) 형태의 묘지인데, 같은 공동묘지에 자리잡은 다른 이들의 묘지와 크기가 비교가 안 되는 데다, \r\n");
      out.write("            보통 가족묘 형태로 조성되는 마우솔레움의 스테레오타입을 다 무시하고 혼자 묘지를 다 차지하고 있는 등 여러모로 파격적인 묘지.\r\n");
      out.write("            을 조성하고 명절인 \"죽은 자의 날(Día de los Muertos)\"에 그의 이름을 딴 음악제를 개최하고 있었다.\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("    <section>\r\n");
      out.write("           \r\n");
      out.write("    </section>\r\n");
      out.write("    <footer>Copyright&copy;2018 3517 최민경 All rights reserved. </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
