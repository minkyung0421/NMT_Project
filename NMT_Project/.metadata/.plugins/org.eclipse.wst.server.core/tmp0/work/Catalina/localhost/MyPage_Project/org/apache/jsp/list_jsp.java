/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-09-02 23:24:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.File;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.File");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\ttable.type04 {\r\n");
      out.write("    border-collapse: separate;\r\n");
      out.write("    border-spacing: 1px;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    line-height: 1.5;\r\n");
      out.write("    border-top: 1px solid #ccc;\r\n");
      out.write("    margin-top:4%;\r\n");
      out.write("  \t\r\n");
      out.write("}\r\n");
      out.write("table.type04 th {\r\n");
      out.write("    width: 150px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    border-bottom: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write("table.type04 td {\r\n");
      out.write("    width: 350px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    vertical-align: top;\r\n");
      out.write("    border-bottom: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("     \r\n");
      out.write("\r\n");
      out.write("      .Btn{margin:30px auto 0; width:100px;}\r\n");
      out.write("      \r\n");
      out.write("      button{\r\n");
      out.write("        background:crimson;\r\n");
      out.write("        color:#fff;\r\n");
      out.write("        border:none;\r\n");
      out.write("        position:relative;\r\n");
      out.write("        height:30px;\r\n");
      out.write("        font-size:0.7em;\r\n");
      out.write("        padding:0 2em;\r\n");
      out.write("        cursor:pointer;\r\n");
      out.write("        transition:800ms ease all;\r\n");
      out.write("        outline:none;\r\n");
      out.write("      }\r\n");
      out.write("      button:hover{\r\n");
      out.write("        background:#fff;\r\n");
      out.write("        color:crimson;\r\n");
      out.write("      }\r\n");
      out.write("      button:before,button:after{\r\n");
      out.write("        content:'';\r\n");
      out.write("        position:absolute;\r\n");
      out.write("        top:0;\r\n");
      out.write("        right:0;\r\n");
      out.write("        height:2px;\r\n");
      out.write("        width:0;\r\n");
      out.write("        background: crimson;\r\n");
      out.write("        transition:400ms ease all;\r\n");
      out.write("      }\r\n");
      out.write("      button:after{\r\n");
      out.write("        right:inherit;\r\n");
      out.write("        top:inherit;\r\n");
      out.write("        left:0;\r\n");
      out.write("        bottom:0;\r\n");
      out.write("      }\r\n");
      out.write("      button:hover:before,button:hover:after{\r\n");
      out.write("        width:100%;\r\n");
      out.write("        transition:800ms ease all;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center><h1 style = \"margin-top:3%\">자유롭게 이야기를 남겨보세요! :)</h1>\r\n");
      out.write("        <a href = \"index.jsp\"><button>돌아가기</button></a></center>\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<table class=\"type04\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t\t<th>글제목</th>\r\n");
      out.write("<tr>\r\n");

	String dirPath = application.getRealPath("/WEB-INF/board");

	File dir = new File(dirPath);
	String filenames[] = dir.list();
	
	for(String filename : filenames){
		String filename2 = filename.replace(".txt", "");

      out.write("\t\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("        \t<td><a href=\"Detail.jsp?FILE_NAME=");
      out.print(filename);
      out.write('"');
      out.write('>');
      out.print( filename2 );
      out.write("</a></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t");
}
	

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</center>\r\n");
      out.write("<center><a href = \"Write.jsp\"><button style = \"margin-top:3%;\">글쓰기</button></a></center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
