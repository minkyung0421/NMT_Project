/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-09-06 04:55:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.inside;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class inside_005f2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Inside Out</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"inside.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <section class=\"section_menu\">\r\n");
      out.write("            <a href = \"../list.jsp\"> <button>자유게시판</button></a>\r\n");
      out.write("        <article class=\"menu\">\r\n");
      out.write("            <a href = \"../index.jsp\"><p class=\"index\">Index</p></a>\r\n");
      out.write("            <ul class=\"mylist\">\r\n");
      out.write("                <li class = \"snow_link\"><a href = \"../snow/snow_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Snow White</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"mermaid_link\">\r\n");
      out.write("                    <a href=\"../mermaid/mermaid_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>The Little Mermaid</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"christmas_link\"><a href = \"../christmas/christmas_1.jsp\" style = \"color:black\"><label>The Nightmare before Christmas</label></a></li>\r\n");
      out.write("                <li class=\"rata_link\">\r\n");
      out.write("                    <a href=\"../rata/rata_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Ratatouille</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"inside_link\">\r\n");
      out.write("                    <a href=\"../inside/inside_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Inside Out</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"moana_link\">\r\n");
      out.write("                    <a href=\"../moana/moana_1.jsp\" style=\"color:black\">\r\n");
      out.write("                        <label>Moana</label>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class = \"koko_link\"><a href = \"../koko/koko_1.jsp\" style = \"color:black\"><label>Coco</label></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <section class = \"section_content\">\r\n");
      out.write("        <article>\r\n");
      out.write("            <img src = \"../inside_img/joy.jpg\" width=\"15%\" height=\"25%\" align=\"left\" style = \"margin-right: 2%;\">\r\n");
      out.write("            <label style = \"font-size:20pt;\">기쁨이(JOY)</label><br><br>\r\n");
      out.write("            감정 중 가장 먼저 생겨난 감정의 리더. \r\n");
      out.write("            담당하는 분야는 기쁨, 긍정적인 사고, 욕망 충족. 덕분에 기쁨이 본부에 없는 이틀, 즉 학교 첫 날 첫 시간부터 이틀 뒤 저녁까지 본부는 개판 5분전. \r\n");
      out.write("            밝고 즐거운 성격이다.        \r\n");
      out.write("            <br><br><br>\r\n");
      out.write("        </article>\r\n");
      out.write("        <article style = \"float: left\">\r\n");
      out.write("           \r\n");
      out.write("            <img src = \"../inside_img/sad.png\" width=\"10%\" height=\"20%\" align=\"right\"  style = \"margin-left: 2%; margin-bottom: 3%\">\r\n");
      out.write("            <label style = \"float: right; font-size:20pt;\">슬픔이(SADNESS)</label><br><br>\r\n");
      out.write("            항상 축 처져있고 비관적이다.\r\n");
      out.write("            즐거운 기억만을 남겨야 한다는 기쁨이에게 무시를 당해서 아무것도 못 했지만, 정작 라일리가 잘못된 길로 들어가기 직전에 가족의 소중함을 일깨워 준 것은 기쁨이 아닌 슬픔의 감정이었다. \r\n");
      out.write("            실제로도 슬픔, 무기력 뿐만 아니라 이해심, 공감, 사랑 등은 슬픔의 담당이었다. \r\n");
      out.write("        </article>\r\n");
      out.write("        <article>\r\n");
      out.write("            <a href = \"inside_3.jsp\"><article style=\"float: right; margin-top:10%\"><label style=\"font-weight: 800\">STORY</label><img src = \"../snow_img/nn.png\"></article></a>    \r\n");
      out.write("             <img src = \"../inside_img/Anger.png\" width=\"15%\" height=\"25%\" align=\"left\" style = \"margin-right: 2%;\">\r\n");
      out.write("            <label style = \"font-size:20pt;\">버럭이(ANGER)</label><br><br> \r\n");
      out.write("            한마디로 이름처럼 버럭하는 성격. 다른 이름으로는 분노라고 불리기도 한다. 기쁨의 설명으로는 일이 공정하지 못한 것에 깊게 관여하는 역할.\r\n");
      out.write("             상당히 다혈질적이고 열받을수록 머리 위에 열이 오르기 시작해 완전 폭발하면 불꽃이 치솟는다.   \r\n");
      out.write("            </article>\r\n");
      out.write("         <article style = \"float: left\">\r\n");
      out.write("              <img src = \"../inside_img/disgust.png\" width=\"10%\" height=\"20%\" align=\"right\"  style = \"margin-left: 2%; margin-bottom: 3%\">\r\n");
      out.write("             <label style = \"float: right; font-size:20pt;\">까칠이(DISGUST)</label><br><br>\r\n");
      out.write("             까칠함과 경멸이 주된 성격. 보이는 역할로는 생리적 거부, 까다로움, 짜증과 경멸. 기쁨의 설명에 따르면 육체적, 사회적으로 병드는(poisoning) 것을 방지하는 역할. \r\n");
      out.write("             가장 여성적인 성격으로 주로 위생이나 패션등의 외적인 이미지, 또래 아이들의 시선에 대해 가장 많은 신경을 쓰는 반응을 보인다.\r\n");
      out.write("         </article>\r\n");
      out.write("        <article>\r\n");
      out.write("            <img src = \"../inside_img/Fear.png\" width=\"10%\" height=\"20%\" align=\"left\" style = \"margin-right: 2%;\">\r\n");
      out.write("            <br><br><br><br><br>\r\n");
      out.write("            <label style = \"font-size:20pt;\">소심이(FEAR)</label><br><br>\r\n");
      out.write("            안전주의자. 하지만 정도가 지나쳐서 뭐든 겁부터 먹는다.\r\n");
      out.write("            주로 보이는 역할은 놀라움, 두려움, 불안. 반면 다칠 일이 없는 꿈 보는 일을 할 때는 당당하게 행동한다. \r\n");
      out.write("            기쁨의 설명으로는 라일리를 안전하게 보호한다는 중요한 역할을 맡고 있다.\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("    <section>\r\n");
      out.write("           \r\n");
      out.write("    </section>\r\n");
      out.write("    <footer>Copyright&copy;2018 3517 최민경 All rights reserved. </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
